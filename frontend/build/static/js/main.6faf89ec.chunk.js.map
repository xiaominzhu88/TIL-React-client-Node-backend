{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","response","setResponse","value","setValue","backendValue","setBackendValue","useEffect","axios","get","then","res","data","send","e","a","preventDefault","method","url","headers","param","catch","err","console","log","className","onSubmit","onChange","target","placeholder","type","body","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAiEeA,EA7DH,WAAO,IAAD,EACeC,mBAAS,IADxB,mBACVC,EADU,KACAC,EADA,OAESF,mBAAS,IAFlB,mBAEVG,EAFU,KAEHC,EAFG,OAGuBJ,mBAAS,IAHhC,mBAGVK,EAHU,KAGIC,EAHJ,KAKjBC,qBAAU,WACTC,IAAMC,IAAI,iBAAiBC,MAAK,SAACC,GAChC,IAAMV,EAAWU,EAAIC,KACrBV,EAAYD,QAEX,IAEH,IAGMY,EAAI,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACZD,EAAEE,iBADU,SAENR,IAAM,CACXS,OAAQ,OACRC,IAAK,gBACLN,KAAMT,EACNgB,QAAS,CACR,eAAgB,oCAChB,8BAA+B,OAG/BT,MAAK,SAACC,GACNL,EAAgBK,EAAIC,KAAKQ,UAEzBC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAdjB,2CAAH,sDAsBV,OACC,sBAAKG,UAAU,MAAf,UACC,uDACA,uBAAMC,SAAUb,EAAhB,UACC,uBACCV,MAAOA,EACPwB,SA/BiB,SAACb,GACrBV,EAASU,EAAEc,OAAOzB,QA+Bf0B,YAAY,6BAEb,wBAAQJ,UAAU,aAAaK,KAAK,SAApC,gCAID,oCACC,8BAAMzB,GAAgBJ,EAAS8B,OAC/B,6BAAK1B,GAAY,gDAAmCA,QAErD,wBAAQoB,UAAU,cAAcO,QAtBpB,WACb5B,EAAS,IACTE,EAAgB,KAoBiCwB,KAAK,SAArD,uBC9CYG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6faf89ec.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nconst App = () => {\n\tconst [response, setResponse] = useState({});\n\tconst [value, setValue] = useState('');\n\tconst [backendValue, setBackendValue] = useState('');\n\n\tuseEffect(() => {\n\t\taxios.get('/api/sayHello').then((res) => {\n\t\t\tconst response = res.data;\n\t\t\tsetResponse(response);\n\t\t});\n\t}, []);\n\n\tconst handleChange = (e) => {\n\t\tsetValue(e.target.value);\n\t};\n\tconst send = async (e) => {\n\t\te.preventDefault();\n\t\tawait axios({\n\t\t\tmethod: 'POST',\n\t\t\turl: '/api/sayHello',\n\t\t\tdata: value,\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t\t'Access-Control-Allow-Origin': '*',\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tsetBackendValue(res.data.param);\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\tconst reset = () => {\n\t\tsetValue('');\n\t\tsetBackendValue('');\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h1>Hi I'm from Frontend!</h1>\n\t\t\t<form onSubmit={send}>\n\t\t\t\t<input\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tplaceholder=\"send something to server\"\n\t\t\t\t/>\n\t\t\t\t<button className=\"formButton\" type=\"submit\">\n\t\t\t\t\tSend to SERVER!\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t\t<section>\n\t\t\t\t<h1>{!backendValue && response.body}</h1>\n\t\t\t\t<h1>{backendValue && `Server: You just sent me ðŸ‘‰ ${backendValue}`}</h1>\n\t\t\t</section>\n\t\t\t<button className=\"resetButton\" onClick={reset} type=\"button\">\n\t\t\t\tReset\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}